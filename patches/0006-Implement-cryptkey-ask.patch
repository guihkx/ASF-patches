From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: guihkx <guihkx@users.noreply.github.com>
Date: Tue, 6 Jul 2021 07:17:17 -0300
Subject: [PATCH] Implement --cryptkey-ask
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This new flag makes ASF ask us for the decryption key.

I think it's safer than setting the key directly in ASF's
CLI arguments, or even using $ASF_CRYPTKEY.

That's because it's much easier to inspect the arguments
and environment variables of a process than to inspect its
raw memory.

The implementation itself is garbage, but it worksâ„¢.
---
 ArchiSteamFarm/Core/ASF.cs     |  3 ++-
 ArchiSteamFarm/NLog/Logging.cs |  5 +++++
 ArchiSteamFarm/Program.cs      | 19 +++++++++++++++++++
 3 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/ArchiSteamFarm/Core/ASF.cs b/ArchiSteamFarm/Core/ASF.cs
index ef6dccde..0013baa4 100644
--- a/ArchiSteamFarm/Core/ASF.cs
+++ b/ArchiSteamFarm/Core/ASF.cs
@@ -1067,7 +1067,8 @@ public enum EUserInputType : byte {
 		Password,
 		SteamGuard,
 		SteamParentalCode,
-		TwoFactorAuthentication
+		TwoFactorAuthentication,
+		CryptKey
 	}
 
 	internal enum EFileType : byte {
diff --git a/ArchiSteamFarm/NLog/Logging.cs b/ArchiSteamFarm/NLog/Logging.cs
index 248b90e6..ad734b4a 100644
--- a/ArchiSteamFarm/NLog/Logging.cs
+++ b/ArchiSteamFarm/NLog/Logging.cs
@@ -115,6 +115,11 @@ internal static class Logging {
 						Console.Write(Bot.FormatBotResponse(Strings.UserInputSteamParentalCode, botName));
 						result = ConsoleReadLineMasked();
 
+						break;
+					case ASF.EUserInputType.CryptKey:
+						Console.Write(Bot.FormatBotResponse("Please type in the decryption key: ", botName));
+						result = ConsoleReadLineMasked();
+
 						break;
 					case ASF.EUserInputType.TwoFactorAuthentication:
 						Console.Write(Bot.FormatBotResponse(Strings.UserInputSteam2FA, botName));
diff --git a/ArchiSteamFarm/Program.cs b/ArchiSteamFarm/Program.cs
index 1b6890e2..567cff70 100644
--- a/ArchiSteamFarm/Program.cs
+++ b/ArchiSteamFarm/Program.cs
@@ -66,6 +66,7 @@ internal static class Program {
 #endif
 
 	private static bool IgnoreUnsupportedEnvironment;
+	private static bool CryptKeyAsk;
 	private static bool SystemRequired;
 
 	internal static async Task Exit(byte exitCode = 0) {
@@ -110,6 +111,16 @@ internal static class Program {
 
 		ArchiCryptoHelper.SetEncryptionKey(cryptKey);
 	}
+	private async static void HandleCryptKeyAskArgument() {
+		string? cryptKey = await Logging.GetUserInput(ASF.EUserInputType.CryptKey).ConfigureAwait(false);
+
+		if (string.IsNullOrEmpty(cryptKey)) {
+			ASF.ArchiLogger.LogGenericError(string.Format(CultureInfo.CurrentCulture, Strings.ErrorIsInvalid, nameof(cryptKey)));
+			return;
+		}
+
+		ArchiCryptoHelper.SetEncryptionKey(cryptKey);
+	}
 
 	private static void HandleNetworkGroupArgument(string networkGroup) {
 		if (string.IsNullOrEmpty(networkGroup)) {
@@ -291,6 +302,10 @@ internal static class Program {
 			return false;
 		}
 
+		if (CryptKeyAsk) {
+			HandleCryptKeyAskArgument();
+		}
+
 		return true;
 	}
 
@@ -528,6 +543,10 @@ internal static class Program {
 				case "--CRYPTKEY" when !cryptKeyNext && !networkGroupNext && !pathNext:
 					cryptKeyNext = true;
 
+					break;
+				case "--CRYPTKEY-ASK" when !cryptKeyNext && !networkGroupNext && !pathNext:
+					CryptKeyAsk = true;
+
 					break;
 				case "--IGNORE-UNSUPPORTED-ENVIRONMENT" when !cryptKeyNext && !networkGroupNext && !pathNext:
 					IgnoreUnsupportedEnvironment = true;
-- 
2.25.1

