name: Build artifacts
on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SDK_VERSION: 6.0.x
  DOTNET_TARGET_FRAMEWORK: net6.0

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
    - id: skip_check
      uses: fkirc/skip-duplicate-actions@v5
      with:
        concurrent_skipping: 'same_content'
        skip_after_successful_duplicate: 'true'
        paths_ignore: '["**/*.md"]'
        do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            target: generic
          - os: ubuntu-20.04
            target: linux-arm64
          - os: ubuntu-20.04
            target: linux-x64
          - os: windows-2019
            target: win-x64

    defaults:
      run:
        shell: bash
        working-directory: ArchiSteamFarm

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Fetch tags from ArchiSteamFarm
        run: |
          git fetch --recurse-submodules=no --tags

      - name: Setup variables
        id: vars
        run: echo "version=$(git describe --long)" >> $GITHUB_OUTPUT

      - name: Show ArchiSteamFarm version
        run: echo '${{ steps.vars.outputs.version }}'

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Show .NET information
        run: dotnet --info

      - name: Show Node.js version
        run: node -v

      - name: Show npm version
        run: npm -v

      - name: Setup git
        run: |
          git config --global user.email guihkx@users.noreply.github.com
          git config --global user.name guihkx

      - name: Apply patches
        run: |
          for patch_file in $(realpath ../patches/*.patch)
          do
              git am --reject "$patch_file"
          done

      - name: Deploy ASF-ui
        working-directory: ArchiSteamFarm/ASF-ui
        run: |
          npm ci
          npm run-script deploy

      - name: Publish ArchiSteamFarm (${{ matrix.target }})
        env:
          TARGET_OS: ${{ matrix.target == 'generic' && 'source' || matrix.target }}
        run: |
          dotnet publish ArchiSteamFarm -c Release -f $DOTNET_TARGET_FRAMEWORK -o ../builds/${{ matrix.target }} ${{ matrix.target != 'generic' && '-r $TARGET_OS -p:ASFVariant=$TARGET_OS -p:EnableCompressionInSingleFile=true -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:SelfContained=true' || '' }}

      - name: Upload build artifacts (${{ matrix.target }})
        uses: actions/upload-artifact@v3
        with:
          name: ArchiSteamFarm_v${{ steps.vars.outputs.version }}-${{ matrix.target }}
          path: builds/${{ matrix.target }}
